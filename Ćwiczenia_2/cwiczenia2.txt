1. Zrobione podczas instalacji PostgreSQL

2.CREATE DATABASE cwiczenie2;

3. CREATE EXTENSION postgis;

4. CREATE TABLE buildings(id int,geometry geometry, name varchar);
   CREATE TABLE roads(id int,geometry geometry, name varchar);
   CREATE TABLE poi(id int,geometry geometry, name varchar);
   
5. 
INSERT INTO buildings (id,geometry,name ) VALUES (1,'POLYGON((3 8, 5 8, 5 6, 3 6, 3 8))','BuildingC');
INSERT INTO buildings (id,geometry,name ) VALUES (2,'POLYGON((4 7, 6 7, 6 5, 4 5, 4 7))','BuildingB');
INSERT INTO buildings (id,geometry,name ) VALUES (3,'POLYGON((9 9, 10 9, 10 8, 9 8, 9 9))','BuildingD');
INSERT INTO buildings (id,geometry,name ) VALUES (4,'POLYGON((1 2, 2 2, 2 1, 1 1, 1 2))','BuildingF');
INSERT INTO buildings (id,geometry,name ) VALUES (5,'POLYGON((8 4, 10.5 4 , 10.5 1.5 , 8 1.5 ,8 4))','BuildingA');

INSERT INTO roads (id,geometry,name ) VALUES (1,'LINESTRING(0 4.5, 12 4.5)','RoadX');
INSERT INTO roads (id,geometry,name ) VALUES (2,'LINESTRING(7.5 10.5, 7.5 0)','RoadY');

INSERT INTO poi (id,geometry,name ) VALUES (1,'POINT(6 9.5)','K');
INSERT INTO poi (id,geometry,name ) VALUES (2,'POINT(6.5 6)','J');
INSERT INTO poi (id,geometry,name ) VALUES (3,'POINT(9.5 6)','I');
INSERT INTO poi (id,geometry,name ) VALUES (4,'POINT(1 3.5)','G');
INSERT INTO poi (id,geometry,name ) VALUES (4,'POINT(5.5 1.5)','H');


6. 
a) SELECT SUM(ST_Length(geometry)) as total_length_roads FROM roads;

b) SELECT ST_AsText(geometry) as wkt, ST_Area(geometry) as area, ST_Perimeter(geometry) as perimeter FROM buildings WHERE name='BuildingA'; 

c) SELECT name,ST_Area(geometry) FROM buildings ORDER BY name;

d) SELECT name,ST_Perimeter(geometry) FROM buildings ORDER BY ST_Area(geometry) DESC LIMIT 2;

e) SELECT ST_Distance(buildings.geometry,poi.geometry) as distance FROM buildings CROSS JOIN poi WHERE buildings.name='BuildingC' and poi.name='K';

f) SELECT ST_Area(ST_Difference(b.geometry, ST_Buffer(bb.geometry, 0.5))) AS area FROM buildings AS b
   CROSS JOIN buildings AS bb WHERE b.name = 'BuildingC' and bb.name = 'BuildingB';

g) SELECT buildings.name FROM buildings CROSS JOIN roads
   WHERE ST_Y(ST_Centroid(buildings.geometry)) > ST_Y(ST_Centroid(roads.geometry)) and roads.name = 'RoadX';

h) SELECT ST_Area(ST_SymDifference(buildings.geometry, 'POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')) as area FROM buildings
   WHERE name = 'BuildingC';


